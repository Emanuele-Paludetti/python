# -*- coding: utf-8 -*-
"""Copia di 07_verifica_ereditarietà_ns_negozio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QclHZtVQ4cPuzxyqc9WPs49oTQfTjPO-

"""

class Articolo:
  def __init__(self, codice, fornitore, marca,prezzo, quantita):
    self.codice = codice
    self.fornitore = fornitore
    self.marca = marca
    self.prezzo = prezzo
    self.quantita = quantita

  def scheda_articolo(self):
     scheda = f"Codice: {self.codice}\nFornitore: {self.fornitore}\nMarca: {self.marca}\nPrezzo: {self.prezzo}\nQuantita: {self.quantita}"
     return scheda

  def modifica_scheda(self):
     valore = int(input("Inserisci cosa vuoi modificare:\n1.fornitore,\n2.marca,\n3.prezzo,\n4.quantita\n"))
     match valore:
      case 1:
        self.fornitore = input("Inserisci il nuovo fornitore: ")
      case 2:
          self.marca = input("Inserisci la nuova marca: ")
      case 3:
          self.prezzo = float(input("Inserisci il nuovo prezzo: "))
      case 4:
          self.quantita = int(input("Inserisci la nuova quantita: "))
      case _:
          print("Valore non valido")
      #Non modifico il codice, a meno che non ci siano esigenze a livello gestionale; normalmente però il codice resta uguale per un determinato articolo
      #9:25 Invernizzi

class Televisore(Articolo):
    def __init__(self, codice, fornitore,marca,prezzo,quantita,pollici,tipo):
      super().__init__(codice,fornitore,marca,prezzo,quantita)
      self.pollici=pollici
      self.tipo=tipo
      

    def scheda_articolo(self):
       scheda = f"Pollici: {self.pollici}\nTipo: {self.tipo}"
       return super().scheda_articolo()+scheda
    
      #9:27 Invernizzi

class Frigorifero(Articolo):
  def __init__(self, codice, fornitore, marca, prezzo, quantita,dimensioni,modello):
    super().__init__(codice,fornitore,marca,prezzo,quantita)
    self.dimensioni=dimensioni
    self.modello=modello

  def scheda_articolo(self):
    scheda = f"Dimensioni: {self.dimensioni}\nModello: {self.modello}"
    return super().scheda_articolo()+scheda
  
  #9:30 Spinarelli

t1 = Televisore(1,"Fornitore 1","Sony",700,10,40,"Schermo piatto")
print(t1.scheda_articolo())

t1.modifica_scheda()
print(t1.scheda_articolo())

#FINO A QUA FUNZIONA

class Ordine():
  def __init__(self,codice,data, pIva,indirizzo):
    self.codice=codice
    self.data=data
    self.pIva=pIva
    self.indirizzo=indirizzo
    self.ordini=[]

  def aggiungi_articolo(self,articolo):
    if isinstance(articolo,Televisore):
      tipo_articolo="televisore"
      self.ordini.append(articolo)

    elif isinstance(articolo,Frigorifero):
      tipo_articolo="frigorifero"
      self.ordini.append(articolo)
    

  def rimuovi_articolo(self,articolo):
      
      cont = 0
      for ordine in self.ordini:
         if ordine.codice == articolo.codice:
            cont+=1
            self.ordini.remove(ordine)
      if cont == 0:
         print("L'articolo non è in lista")  
      

  def importo_ordine(self):
    #11 Stampa il numero di articoli e per ogni articolo l'importo (prezzo*quantita)
    tot_art=0
    importo = 0

    for ordine in self.ordini:
      importo=ordine.prezzo*ordine.quantita
      tot_art+=1
      
      
      if isinstance(ordine,Televisore):
        print(f"L'importo dell'ordine televisore, è di: {importo}")

      elif isinstance(ordine,Frigorifero):
        print(f"l'importo dell'articolo frigorifero è di: {importo}")
      
    print(f"Il totale degli articoli è di: {tot_art} ")


  def dettaglio_ordine(self):
    #12 Stampa i dettagli dell'ordine e restituisce una lista contenente
    # [somma importi televisori, somma importi frigoriferi, somma importi totali ]
    #...
    sommaT=0
    sommaF=0
    for ordine in self.ordini:
      if isinstance(ordine,Televisore):
         sommaT += ordine.prezzo
          
      elif isinstance(ordine,Frigorifero):
          sommaF += ordine.prezzo
          
      


    return([sommaT,sommaF,sommaT+sommaF])

t2 = Televisore(2,"Fornitore 2","Samsung",1000,5,80,"Schermo curvo")
f1 = Frigorifero(3,"Fornitore 3","Bosch",750,12,'790x2000x600','Ultra')
f2 = Frigorifero(4,"Fornitore 4","Ariston",550,10,'590x1600x500','Medium')

ordine1=Ordine(1,"24/02/2022",'213143','Via della consegna 1')
ordine1.aggiungi_articolo(t1)
ordine1.aggiungi_articolo(t2)
ordine1.aggiungi_articolo(f1)
ordine1.aggiungi_articolo(f2)

ordine1.rimuovi_articolo(f2)
ordine1.rimuovi_articolo(f2)

#13 Risposta al Punto 1 : Per un ordine: il numero di articoli presenti e
# l'importo totale senza distinguere il tipo di articolo

ordine1.importo_ordine()

#14 Risposta punto 2.   Per un ordine: il dettaglio degli articoli, l'importo totale,
# l'importo dei televisori e l'importo dei frigoriferi.
importi=ordine1.dettaglio_ordine()
print("--------------------------")
print(f"\nImporto televisori= {importi[0]}")
print(f"\nImporto frigoriferi= {importi[1]}")
print(f"\nImporto totale= {importi[2]}")

#Funziona 10:56

class Ordini():
  def __init__(self,nome_negozio,codice_negozio):
    self.nome_negozio = nome_negozio
    self.codice_negozio = codice_negozio
    self.ordini=[]

  def aggiungi_ordine(self,ordine):
    self.ordini.append(ordine)

  def rimuovi_ordine(self,ordine):
    cont = 0
    for nOrdini in self.ordini:
      if nOrdini == ordine:
        self.ordini.remove(ordine)
        print("Ordine eliminato")
        cont += 1
    if cont == 0:
      print("Ordine non trovato")

  def totale_ordini(self):
    totT = 0
    totF = 0
    tot = 0
    for ordine in self.ordini:
      importi=ordine.dettaglio_ordine()
      totT += importi[0]
      totF += importi[1]
      tot = totT + totF
    return ([totT,totF,tot])

ordini_negozio=Ordini("Megastore vendita ",1)
ordini_negozio.aggiungi_ordine(ordine1)
ordini_negozio.rimuovi_ordine(ordine1)
ordini_negozio.rimuovi_ordine(ordine1)

ordini_negozio.aggiungi_ordine(ordine1)

t3 = Televisore(5,"Fornitore 5","LG",600,4,70,"Schermo curvo")
f3 = Frigorifero(6,"Fornitore 6","Bosch",450,10,'490x1000x400','Small')
ordine2=Ordine(2,"25/02/2022",'213113','Via della consegna 2')
ordine2.aggiungi_articolo(t3)
ordine2.aggiungi_articolo(f3)

ordini_negozio.aggiungi_ordine(ordine2)

# 20 Riposta punto 3: Per tutti gli ordini del negozio mostra
# il dettaglio degli articoli, l'importo totale,
# l'importo dei televisori e l'importo dei frigoriferi.
importiTotali=ordini_negozio.totale_ordini()
print("--------------------------")
print(f"\nImporto totale televisori= {importiTotali[0]}")
print(f"\nImporto totale frigoriferi= {importiTotali[1]}")
print(f"\nImporto totale tutti gli ordini= {importiTotali[2]}")
